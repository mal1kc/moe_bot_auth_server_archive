* özellikler

** sorunlar

- ne kadar güvenli emin degilim sifre kısmı

** TODO eksikler - v1 [75%]
    - [X] login islemi gözden geçirilmesi lazım
    - [X] logine test lazım
    - [X] testleri baştan yaz
    - [-] externel bir şekilde kullanım testleri
      - [-] normal testler dışında client klasöründe genel istek çeşitleri denemeli örneklenmeli
        - [ ] admin,user şeklinde
        - [-] admin için [1/4]
          - [X] register
          - [ ] update
          - [ ] delete
          - [ ] info
        - [ ] user [0%]
          - [ ] login
          - [ ] info
            - [ ] u_package
            - [ ] u_session
            - [ ] self/user
    - [X] u_package ekleme
    - [X] ekleme 'register' isteklerinde başarılı olursa beraberinde id de dönmeli
        #+begin_src python
            {
                "status":"success"
                "message":"user_created"
                "user": {
                    **user_data
                }
            }
        #+end_src
    - [X] güncelleme  routelari
        #+begin_src python
        url = "api/v1/admin/update/<int:m_type>/<int:m_id>"
        # example mType.user -> 0
        # db_user.id -> 2
        # url look like that -> DOMAIN_OR_HOST/api/v1/admin/update/0/2
        # needs admin auth header
        json_example_update_user_request = {
            "new_model": {
                "password_hash": make_password_ready("new_password")
            }
        }

        json_example_package_user_request = {
            "new_model": {
                "name" : "adada"
                "detail" : "1dadad"
                "days": 10,
                "package_contents" : [{
                "name"  : "moe_gatherer" ,"content_value":"moe_gatherer" # contentvalue enum degeri
                }]
            }
        }
        #+end_src
    - [ ] tarih , k ad, paket bazlı sorgu sonucu bütün(kullanicya bağlı herşey) tablo
    - [X] register sonrası daha detayli çıktı ( package ve package_content için)
    - [X] admin için daha okunaklı bir çıktı
    - [X] admin için id ve name e göre info routelari
     #+begin_src python
    url = "/api/v1/admin/<int:m_type>/<int:m_id>"
    # example for u_package

    # example url to get u_package_with id=42
    u_package_info = url.format(
        m_type=3,
        m_id=42
    )
     #+end_src
    - [X] delete routelari
    - [X] routelar methodlarına göre ayrılacak - post,update,delete,put
    - [X] çok uzun fonksiyonları refaktörlemek lazim (admin_register, admin_update gibi)
    - [ ] belli hata mesajı şemasına uygun hatalar (daha sonra)
    - [ ] daha anlaşılır loglama (daha sonra)

** muhtemel v2 özellikleri

- sessionlara token baglıyıp token üzerinden kontrol gerçekleştirme ve session ömrünü uzatma
